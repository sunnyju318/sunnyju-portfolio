@use '../../styles/base/mixin.scss' as mixins;
@use '../../styles/base/variables.scss' as vars;

.home-wrapper {
  @include mixins.grid-layout();
  @include mixins.container();
  /* grid-layout에 이미 display:grid가 포함되어 있기 때문에 이미 해당 컨테이너는 그리드 컨테이너이며 그걸 직접 자식들에게 적용하는 용도이다.
즉, 자식 요소들이 각각 자기 내부에서 grid를 쓴다면 해당 컨테이너가 grid일 필요는 없다.*/
}

.hero-text {
  margin-top: 2rem;
  text-align: center;
  grid-column: 1/-1;

  h1 {
    color: vars.$text-primary-accent;
    font-size: vars.$font-size-3xl;
  }

  h2 {
    color: vars.$text-primary-accent;
    font-size: vars.$font-size-xl;
  }

  p {
    margin-top: 2rem;
    font-weight: vars.$font-weight-medium;
  }
}

.arrow-wrapper-top-mobile-only {
  margin: 3rem auto 0 auto;
  grid-column: 1/-1;
}

.arrow-wrapper-top-desktop-only {
  display: none;
}

// arrow 각각 반응형에서 따로 제어하기위해 className를 따로 주었다.

.faceillustration-wrapper {
  grid-column: 1/-1;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto;
}

.faceillustration-container {
  width: 90%;
  max-width: 90%;
}

.arrow-wrapper-bottom {
  margin: 3rem auto 0 auto;
  grid-column: 1/-1;
}

.sub-link-wrapper {
  margin: 3rem auto 0 auto;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  grid-column: 1/-1;

  .sub-link {
    font-size: vars.$font-size-lg;
    color: vars.$text-heading-dark-alt;
    display: inline-flex;
    justify-content: flex-start;
    align-items: center;
    gap: 1rem;

    // flex는 블록요소처럼 줄 전체 차지
    // inline-flex는 인라인 요소처럼 다른요소 옆에 올수 있음

    .arrow-sub-link {
      svg {
        fill: vars.$text-heading-dark-alt;
        width: 20px;
      }
    }
  }
}

.project-list-wrapper {
  margin: 4rem 0 0;
  grid-column: 1/-1;
}


// Tablet
@include mixins.respond-to('md') {
  .hero-text {
    grid-column: 1/4;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;

    h1 {
      font-size: vars.$font-size-4xl;
    }

    h2 {
      font-size: vars.$font-size-xl;
    }

    p {
      font-size: vars.$font-size-lg;
    }
  }

  .arrow-wrapper-top-mobile-only {
    display: none;
  }

  .faceillustration-wrapper {
    grid-column: 4/7;
    margin: 5rem 0 2rem 0;
  }

  .faceillustration-container {
    width: 100%;
    max-width: 100%;
  }

  .arrow-wrapper-top-desktop-only {
    margin: 0;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    grid-column: 7/9;
  }

  .arrow-wrapper-bottom {
    margin: 0;
    @include mixins.flex-center;
    grid-column: 1/-1;
  }

  .arrow-wrapper-last {
    margin: 1.5rem auto 5rem auto;
  }
}


// Desktop
@include mixins.respond-to('lg') {
  .hero-text {
    h1 {
      text-align: end;
      font-size: vars.$font-size-3xl-large;
    }

    h2 {
      font-size: vars.$font-size-body-large;
    }

    p {
      font-size: vars.$font-size-xl;
    }
  }

  .last-name {
    display: none;
  }

  .faceillustration-wrapper {
    grid-column: 4/10;
    margin: 5rem 0 2rem 0;
  }

  .faceillustration-container {
    width: 80%;
    max-width: 80%;
  }

  .arrow-wrapper-top-desktop-only {
    grid-column: 10/13;
  }

}

